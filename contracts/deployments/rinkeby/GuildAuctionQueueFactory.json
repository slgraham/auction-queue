{
  "address": "0x3e9886fD8BD12A237468826094f85FB6bbb4B1A1",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_implementation",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "queueAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "destination",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lockupPeriod",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minBid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minShares",
          "type": "uint256"
        }
      ],
      "name": "NewQueue",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_destination",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_lockupPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minBid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minShares",
          "type": "uint256"
        }
      ],
      "name": "create",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x611cd1d9b407c49d89beb4c8d688bb52e755ae127e0c7bd6da094867f312f8ca",
  "receipt": {
    "to": null,
    "from": "0xf48928b8d6C04122778aD74C64886D972decA39F",
    "contractAddress": "0x3e9886fD8BD12A237468826094f85FB6bbb4B1A1",
    "transactionIndex": 4,
    "gasUsed": "238521",
    "logsBloom": "0x
    "blockHash": "0x88cd7f41c7b9474753217222b879927677ae5032b63aa17f1add532c6eb4e2ae",
    "transactionHash": "0x611cd1d9b407c49d89beb4c8d688bb52e755ae127e0c7bd6da094867f312f8ca",
    "logs": [],
    "blockNumber": 8815679,
    "cumulativeGasUsed": "414977",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xC2C892BDa73905fDb5d7806018225c9151D6752F"
  ],
  "solcInputHash": "efdfd05039d7cbf74bdd3a87dd96677c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"queueAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockupPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minBid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minShares\",\"type\":\"uint256\"}],\"name\":\"NewQueue\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_lockupPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minShares\",\"type\":\"uint256\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GuildAuctionQueueFactory.sol\":\"GuildAuctionQueueFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\\n * deploying minimal proxy contracts, also known as \\\"clones\\\".\\n *\\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\\n *\\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\\n * deterministic method.\\n *\\n * _Available since v3.4._\\n */\\nlibrary Clones {\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     */\\n    function clone(address implementation) internal returns (address instance) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create(0, ptr, 0x37)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create failed\\\");\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\\n     * the clones cannot be deployed twice at the same address.\\n     */\\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create2(0, ptr, 0x37, salt)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create2 failed\\\");\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(address implementation, bytes32 salt, address deployer) internal pure returns (address predicted) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\\n            mstore(add(ptr, 0x4c), salt)\\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\\n            predicted := keccak256(add(ptr, 0x37), 0x55)\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(address implementation, bytes32 salt) internal view returns (address predicted) {\\n        return predictDeterministicAddress(implementation, salt, address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x90dec20805396efc780a82c62578626103e03278bc1f48b61bb3aba52a61617c\",\"license\":\"MIT\"},\"contracts/GuildAuctionQueueFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/proxy/Clones.sol\\\";\\nimport \\\"./interfaces/IGuildAuctionQueue.sol\\\";\\n\\ncontract GuildAuctionQueueFactory {\\n    address public immutable implementation;\\n\\n    constructor(address _implementation) {\\n        require(_implementation != address(0), \\\"invalid implementation\\\");\\n\\n        implementation = _implementation;\\n    }\\n\\n    function create(\\n        address _token,\\n        address _destination,\\n        uint256 _lockupPeriod,\\n        uint256 _minBid,\\n        uint256 _minShares\\n    ) external returns (address) {\\n        //\\n        address queueAddress = Clones.clone(implementation);\\n\\n        IGuildAuctionQueue(queueAddress).init(\\n            msg.sender,\\n            _token,\\n            _destination,\\n            _lockupPeriod,\\n            _minBid,\\n            _minShares\\n        );\\n\\n        emit NewQueue(\\n            queueAddress,\\n            msg.sender,\\n            _token,\\n            _destination,\\n            _lockupPeriod,\\n            _minBid,\\n            _minShares\\n        );\\n\\n        return queueAddress;\\n    }\\n\\n    // Event\\n\\n    event NewQueue(\\n        address queueAddress,\\n        address owner,\\n        address token,\\n        address destination,\\n        uint256 lockupPeriod,\\n        uint256 minBid,\\n        uint256 minShares\\n    );\\n}\\n\",\"keccak256\":\"0x426eb38618ae0488612839fb303ec8c8c55ca305201c2977f804aedb9f1510e5\",\"license\":\"MIT\"},\"contracts/interfaces/IGuildAuctionQueue.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IGuildAuctionQueue {\\n    function init(\\n        address owner,\\n        address token,\\n        address destination,\\n        uint256 lockupPeriod,\\n        uint256 minBid,\\n        uint256 minShares\\n    ) external;\\n\\n    function submitBid(uint256 amount, bytes32 details)\\n        external\\n        returns (uint256);\\n\\n    function increaseBid(uint256 amount, uint256 id) external;\\n\\n    function withdrawBid(uint256 amount, uint32 id) external;\\n\\n    function cancelBid(uint256 id) external;\\n\\n    function acceptBid(uint256 id) external;\\n\\n    function changeMinBid(uint256 amount) external;\\n\\n    function isMember(address user) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf0d9077b46173d9eff35a8ebe8f52e0079981d707163c9013b74ee0f94983b42\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405161044638038061044683398101604081905261002f91610073565b6001600160a01b03811661005e5760405162461bcd60e51b8152600401610055906100a1565b60405180910390fd5b60601b6001600160601b0319166080526100d8565b600060208284031215610084578081fd5b81516001600160a01b038116811461009a578182fd5b9392505050565b60208082526016908201527f696e76616c696420696d706c656d656e746174696f6e00000000000000000000604082015260600190565b60805160601c61034b6100fb60003960008181606e01526098015261034b6000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80635c60da1b1461003b578063891b1a0014610059575b600080fd5b61004361006c565b6040516100509190610254565b60405180910390f35b610043610067366004610208565b610090565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806100bc7f0000000000000000000000000000000000000000000000000000000000000000610174565b604051630ce3738760e41b81529091506001600160a01b0382169063ce373870906100f59033908b908b908b908b908b906004016102ac565b600060405180830381600087803b15801561010f57600080fd5b505af1158015610123573d6000803e3d6000fd5b505050507f59e16b922ce5d94cc6b2db6b42d1a6bc2dd08e71fbdd512f43c7750f6a045a25813389898989896040516101629796959493929190610268565b60405180910390a19695505050505050565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b0381166101ec5760405162461bcd60e51b81526004016101e3906102e5565b60405180910390fd5b919050565b80356001600160a01b03811681146101ec57600080fd5b600080600080600060a0868803121561021f578081fd5b610228866101f1565b9450610236602087016101f1565b94979496505050506040830135926060810135926080909101359150565b6001600160a01b0391909116815260200190565b6001600160a01b03978816815295871660208701529386166040860152919094166060840152608083019390935260a082019290925260c081019190915260e00190565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925260a081019190915260c00190565b602080825260169082015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b60408201526060019056fea26469706673582212203b497f84954eb910e6e711ad60c68689bd8eca6c00364e3ce09ad8547d449d1164736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80635c60da1b1461003b578063891b1a0014610059575b600080fd5b61004361006c565b6040516100509190610254565b60405180910390f35b610043610067366004610208565b610090565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806100bc7f0000000000000000000000000000000000000000000000000000000000000000610174565b604051630ce3738760e41b81529091506001600160a01b0382169063ce373870906100f59033908b908b908b908b908b906004016102ac565b600060405180830381600087803b15801561010f57600080fd5b505af1158015610123573d6000803e3d6000fd5b505050507f59e16b922ce5d94cc6b2db6b42d1a6bc2dd08e71fbdd512f43c7750f6a045a25813389898989896040516101629796959493929190610268565b60405180910390a19695505050505050565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b0381166101ec5760405162461bcd60e51b81526004016101e3906102e5565b60405180910390fd5b919050565b80356001600160a01b03811681146101ec57600080fd5b600080600080600060a0868803121561021f578081fd5b610228866101f1565b9450610236602087016101f1565b94979496505050506040830135926060810135926080909101359150565b6001600160a01b0391909116815260200190565b6001600160a01b03978816815295871660208701529386166040860152919094166060840152608083019390935260a082019290925260c081019190915260e00190565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925260a081019190915260c00190565b602080825260169082015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b60408201526060019056fea26469706673582212203b497f84954eb910e6e711ad60c68689bd8eca6c00364e3ce09ad8547d449d1164736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}